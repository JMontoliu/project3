import streamlit as st
import requests
import os
import uuid
from urllib.parse import urljoin
import time

def mostrar():
    # --- Estilo personalizado CSS ---
    st.markdown("""
    <style>
        .main-header {
            font-family: 'Helvetica Neue', sans-serif;
            color: #FF69B4;
            text-align: center;
        }
        .subheader {
            font-family: 'Helvetica Neue', sans-serif;
            color: #808080;
            text-align: center;
        }
        .stChatMessage {
            border-radius: 15px;
        }
        div.stChatMessage [data-testid="StChatMessageContent"] {
            background-color: #f7f7f7;
            border-radius: 15px;
        }
        div.stChatMessage.assistant [data-testid="StChatMessageContent"] {
            background-color: #FFF0F5;
        }
        .info-box {
            background-color: #FFF0F5;
            border-radius: 10px;
            padding: 20px;
            margin: 10px 0;
            border: 1px solid #FFD1DC;
        }
        .contact-button {
            background-color: #FF69B4;
            color: white;
            font-weight: bold;
            border-radius: 10px;
            padding: 10px 20px;
            text-align: center;
            margin: 10px 0;
            cursor: pointer;
        }
        .back-button {
            background-color: #f0f0f0;
            color: #333;
            border-radius: 5px;
            padding: 5px 15px;
            font-size: 14px;
            cursor: pointer;
            margin-bottom: 20px;
        }
    </style>
    """, unsafe_allow_html=True)

    # --- T√≠tulo y logotipo ---
    col1, col2, col3 = st.columns([1, 2, 1])
    with col2:
        st.markdown("<h1 class='main-header'>BabyBot</h1>", unsafe_allow_html=True)
        st.markdown("<h3 class='subheader'>Asistente de Little Moments Photography</h3>", unsafe_allow_html=True)

    # --- Estado de sesi√≥n ---
    if "chat" not in st.session_state:
        st.session_state.chat = []

    if "thread_id" not in st.session_state:
        st.session_state.thread_id = f"session-{uuid.uuid4()}"

    if "bienvenida_mostrada" not in st.session_state:
        st.session_state.bienvenida_mostrada = False

    # --- Mensaje de bienvenida inicial ---
    if not st.session_state.bienvenida_mostrada:
        bienvenida = """
        üëã ¬°Hola! Soy BabyBot, el asistente virtual de Little Moments Photography.
        
        Puedo ayudarte con:
        - Informaci√≥n sobre nuestras sesiones para reci√©n nacidos, beb√©s y Smash Cake
        - Detalles sobre precios y paquetes disponibles
        - C√≥mo prepararte para una sesi√≥n fotogr√°fica
        - Reservar una cita para tu beb√©
        
        ¬øEn qu√© puedo ayudarte hoy?
        """
        st.session_state.chat.append({"role": "assistant", "message": bienvenida})
        st.session_state.bienvenida_mostrada = True

    # --- Mostrar historial de chat ---
    for msg in st.session_state.chat:
        with st.chat_message(msg["role"]):
            st.markdown(msg["message"])

    # --- Informaci√≥n de contacto en el sidebar ---
    with st.sidebar:
        st.markdown("### Little Moments Photography")
        
        st.markdown("#### Contacto")
        st.markdown("""
        üìû +34 600 123 456  
        üìß info@littlemoments.com  
        üìç Calle Principal 123, Madrid
        """)
        
        st.markdown("#### Horario")
        st.markdown("""
        Lunes - Viernes: 9:00 - 19:00  
        S√°bados: 10:00 - 14:00  
        Domingos: Cerrado
        """)
        
        # Bot√≥n para volver a la p√°gina principal
        if st.button("‚Üê Volver a la p√°gina principal", key="sidebar_back"):
            st.session_state.inicio = True
            st.experimental_rerun()

    # --- Entrada de texto del usuario ---
    user_input = st.chat_input("Escribe tu mensaje...")

    if user_input:
        # Mostrar el mensaje del usuario
        st.chat_message("user").markdown(user_input)
        st.session_state.chat.append({"role": "user", "message": user_input})

        with st.spinner("Pensando..."):
            respuesta = send_message_to_api(user_input)

        # Mostrar la respuesta del asistente
        st.chat_message("assistant").markdown(respuesta)
        st.session_state.chat.append({"role": "assistant", "message": respuesta})

    # --- Informaci√≥n adicional al final ---
    st.markdown("---")
    st.markdown("""
    <div class="info-box">
    <strong>¬øPrefieres hablar directamente con nosotros?</strong><br>
    Ll√°manos al +34 600 123 456 o env√≠anos un email a info@littlemoments.com para agendar una consulta personalizada.
    </div>
    """, unsafe_allow_html=True)

# --- Funci√≥n para enviar mensaje a la API ---
def send_message_to_api(user_input):

    # URL de tu API
    url = os.getenv("URL_CHATBOT2").rstrip("/")
    if not url:
        print("Error: URL_CHATBOT2 no est√° configurada.")
    if not url.endswith("/chat"):
        url += "/chat"
    
    payload = {
        "thread_id": st.session_state.thread_id,
        "message": user_input
    }
    
    # Lista de respuestas preprogramadas basadas en palabras clave
    keyword_responses = {
        "precio": "Nuestros paquetes para fotograf√≠a de beb√©s comienzan desde 150‚Ç¨ e incluyen:\n\n- Sesi√≥n de 1-2 horas\n- 10 fotograf√≠as digitales editadas\n- 5 impresiones en formato 15x20cm\n\nTambi√©n ofrecemos paquetes personalizados. ¬øTe gustar√≠a m√°s detalles sobre alg√∫n servicio espec√≠fico?",
        
        "cita": "Para agendar una sesi√≥n fotogr√°fica, necesitamos planificarla con anticipaci√≥n, especialmente para reci√©n nacidos. Te recomendamos contactarnos durante tu embarazo para reservar una fecha tentativa. ¬øTe gustar√≠a que te contacte nuestra fot√≥grafa para coordinar los detalles?",
        
        "reci√©n nacido": "Nuestras sesiones para reci√©n nacidos son ideales durante los primeros 15 d√≠as de vida cuando el beb√© es m√°s flexible y duerme profundamente. La sesi√≥n dura aproximadamente 2-3 horas, permitiendo tiempo para alimentaci√≥n y descansos. ¬øTe gustar√≠a conocer c√≥mo prepararte para una sesi√≥n de reci√©n nacido?",
        
        "smash cake": "¬°Las sesiones Smash Cake son muy divertidas! Dise√±adas para celebrar el primer cumplea√±os, incluyen una peque√±a tarta especialmente preparada para que el beb√© juegue y la 'destroce'. Proporcionamos el escenario, la tarta y la limpieza posterior. ¬°Solo necesitas traer a tu peque√±o y tu c√°mara para capturar su expresi√≥n!",
        
        "ubicaci√≥n": "Nuestro estudio est√° ubicado en Calle Principal 123, Madrid. Contamos con un espacio acogedor, temperatura controlada y todas las comodidades para ti y tu beb√©. Tambi√©n ofrecemos sesiones a domicilio o en exteriores seg√∫n el tipo de fotograf√≠a que prefieras.",
        
        "preparaci√≥n": "Para preparar a tu beb√© para una sesi√≥n fotogr√°fica, recomendamos:\n\n- Alimentarlo justo antes de la sesi√≥n\n- Traer su manta o juguete favorito\n- Ropa extra en caso de accidentes\n- Para reci√©n nacidos, mantenerlos despiertos 1-2 horas antes para que duerman durante la sesi√≥n\n\n¬øHay algo espec√≠fico que te preocupe sobre la preparaci√≥n?"
    }

    # Buscar palabras clave en el mensaje del usuario
    for keyword, response in keyword_responses.items():
        if keyword in user_input.lower():
            # Simular el retraso de una API
            time.sleep(1.5)
            return response
    
    try:
        # Si no hay palabras clave coincidentes, enviar a la API real
        response = requests.post(url, json=payload, timeout=10)
        response.raise_for_status()
        return response.json().get("response", "Disculpa, estoy teniendo problemas para procesar tu solicitud. ¬øPodr√≠as intentar con otra pregunta?")
    except requests.exceptions.RequestException:
        # En caso de error con la API, enviar una respuesta gen√©rica
        return "Gracias por tu mensaje. Actualmente nuestro sistema est√° experimentando dificultades. ¬øTe gustar√≠a que un miembro de nuestro equipo te contacte directamente? Puedes llamarnos tambi√©n al +34 600 123 456."
